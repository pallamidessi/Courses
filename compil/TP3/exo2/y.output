Grammaire

    0 $accept: stmt $end

    1 stmt: IDENTIFIER AFFEC expr '\n'
    2     | WHILE condition DO stmtlist DONE
    3     | IF condition THEN stmtlist ENDIF
    4     | IF condition THEN stmtlist ELSE stmtlist ENDIF

    5 stmtlist: stmtlist stmt
    6         | stmt

    7 expr: IDENTIFIER
    8     | INTEGER

    9 condition: IDENTIFIER EQUAL INTEGER
   10          | TRUE
   11          | FALSE
   12          | condition OR condition
   13          | condition AND condition
   14          | NOT condition
   15          | '(' condition ')'


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'\n' (10) 1
'(' (40) 15
')' (41) 15
error (256)
IDENTIFIER (258) 1 7 9
INTEGER (259) 8 9
NOT (260) 14
EQUAL (261) 9
OR (262) 12
AND (263) 13
AFFEC (264) 1
IF (265) 3 4
THEN (266) 3 4
ELSE (267) 4
ENDIF (268) 3 4
WHILE (269) 2
DO (270) 2
DONE (271) 2
TRUE (272) 10
FALSE (273) 11


Non-terminaux, suivis des règles où ils apparaissent

$accept (22)
    à gauche: 0
stmt (23)
    à gauche: 1 2 3 4, à droite: 0 5 6
stmtlist (24)
    à gauche: 5 6, à droite: 2 3 4 5
expr (25)
    à gauche: 7 8, à droite: 1
condition (26)
    à gauche: 9 10 11 12 13 14 15, à droite: 2 3 4 12 13 14 15


État 0

    0 $accept: . stmt $end

    IDENTIFIER  décalage et aller à l'état 1
    IF          décalage et aller à l'état 2
    WHILE       décalage et aller à l'état 3

    stmt  aller à l'état 4


État 1

    1 stmt: IDENTIFIER . AFFEC expr '\n'

    AFFEC  décalage et aller à l'état 5


État 2

    3 stmt: IF . condition THEN stmtlist ENDIF
    4     | IF . condition THEN stmtlist ELSE stmtlist ENDIF

    IDENTIFIER  décalage et aller à l'état 6
    NOT         décalage et aller à l'état 7
    TRUE        décalage et aller à l'état 8
    FALSE       décalage et aller à l'état 9
    '('         décalage et aller à l'état 10

    condition  aller à l'état 11


État 3

    2 stmt: WHILE . condition DO stmtlist DONE

    IDENTIFIER  décalage et aller à l'état 6
    NOT         décalage et aller à l'état 7
    TRUE        décalage et aller à l'état 8
    FALSE       décalage et aller à l'état 9
    '('         décalage et aller à l'état 10

    condition  aller à l'état 12


État 4

    0 $accept: stmt . $end

    $end  décalage et aller à l'état 13


État 5

    1 stmt: IDENTIFIER AFFEC . expr '\n'

    IDENTIFIER  décalage et aller à l'état 14
    INTEGER     décalage et aller à l'état 15

    expr  aller à l'état 16


État 6

    9 condition: IDENTIFIER . EQUAL INTEGER

    EQUAL  décalage et aller à l'état 17


État 7

   14 condition: NOT . condition

    IDENTIFIER  décalage et aller à l'état 6
    NOT         décalage et aller à l'état 7
    TRUE        décalage et aller à l'état 8
    FALSE       décalage et aller à l'état 9
    '('         décalage et aller à l'état 10

    condition  aller à l'état 18


État 8

   10 condition: TRUE .

    $défaut  réduction par utilisation de la règle 10 (condition)


État 9

   11 condition: FALSE .

    $défaut  réduction par utilisation de la règle 11 (condition)


État 10

   15 condition: '(' . condition ')'

    IDENTIFIER  décalage et aller à l'état 6
    NOT         décalage et aller à l'état 7
    TRUE        décalage et aller à l'état 8
    FALSE       décalage et aller à l'état 9
    '('         décalage et aller à l'état 10

    condition  aller à l'état 19


État 11

    3 stmt: IF condition . THEN stmtlist ENDIF
    4     | IF condition . THEN stmtlist ELSE stmtlist ENDIF
   12 condition: condition . OR condition
   13          | condition . AND condition

    OR    décalage et aller à l'état 20
    AND   décalage et aller à l'état 21
    THEN  décalage et aller à l'état 22


État 12

    2 stmt: WHILE condition . DO stmtlist DONE
   12 condition: condition . OR condition
   13          | condition . AND condition

    OR   décalage et aller à l'état 20
    AND  décalage et aller à l'état 21
    DO   décalage et aller à l'état 23


État 13

    0 $accept: stmt $end .

    $défaut  accepter


État 14

    7 expr: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 7 (expr)


État 15

    8 expr: INTEGER .

    $défaut  réduction par utilisation de la règle 8 (expr)


État 16

    1 stmt: IDENTIFIER AFFEC expr . '\n'

    '\n'  décalage et aller à l'état 24


État 17

    9 condition: IDENTIFIER EQUAL . INTEGER

    INTEGER  décalage et aller à l'état 25


État 18

   12 condition: condition . OR condition
   13          | condition . AND condition
   14          | NOT condition .

    $défaut  réduction par utilisation de la règle 14 (condition)


État 19

   12 condition: condition . OR condition
   13          | condition . AND condition
   15          | '(' condition . ')'

    OR   décalage et aller à l'état 20
    AND  décalage et aller à l'état 21
    ')'  décalage et aller à l'état 26


État 20

   12 condition: condition OR . condition

    IDENTIFIER  décalage et aller à l'état 6
    NOT         décalage et aller à l'état 7
    TRUE        décalage et aller à l'état 8
    FALSE       décalage et aller à l'état 9
    '('         décalage et aller à l'état 10

    condition  aller à l'état 27


État 21

   13 condition: condition AND . condition

    IDENTIFIER  décalage et aller à l'état 6
    NOT         décalage et aller à l'état 7
    TRUE        décalage et aller à l'état 8
    FALSE       décalage et aller à l'état 9
    '('         décalage et aller à l'état 10

    condition  aller à l'état 28


État 22

    3 stmt: IF condition THEN . stmtlist ENDIF
    4     | IF condition THEN . stmtlist ELSE stmtlist ENDIF

    IDENTIFIER  décalage et aller à l'état 1
    IF          décalage et aller à l'état 2
    WHILE       décalage et aller à l'état 3

    stmt      aller à l'état 29
    stmtlist  aller à l'état 30


État 23

    2 stmt: WHILE condition DO . stmtlist DONE

    IDENTIFIER  décalage et aller à l'état 1
    IF          décalage et aller à l'état 2
    WHILE       décalage et aller à l'état 3

    stmt      aller à l'état 29
    stmtlist  aller à l'état 31


État 24

    1 stmt: IDENTIFIER AFFEC expr '\n' .

    $défaut  réduction par utilisation de la règle 1 (stmt)


État 25

    9 condition: IDENTIFIER EQUAL INTEGER .

    $défaut  réduction par utilisation de la règle 9 (condition)


État 26

   15 condition: '(' condition ')' .

    $défaut  réduction par utilisation de la règle 15 (condition)


État 27

   12 condition: condition . OR condition
   12          | condition OR condition .
   13          | condition . AND condition

    $défaut  réduction par utilisation de la règle 12 (condition)


État 28

   12 condition: condition . OR condition
   13          | condition . AND condition
   13          | condition AND condition .

    $défaut  réduction par utilisation de la règle 13 (condition)


État 29

    6 stmtlist: stmt .

    $défaut  réduction par utilisation de la règle 6 (stmtlist)


État 30

    3 stmt: IF condition THEN stmtlist . ENDIF
    4     | IF condition THEN stmtlist . ELSE stmtlist ENDIF
    5 stmtlist: stmtlist . stmt

    IDENTIFIER  décalage et aller à l'état 1
    IF          décalage et aller à l'état 2
    ELSE        décalage et aller à l'état 32
    ENDIF       décalage et aller à l'état 33
    WHILE       décalage et aller à l'état 3

    stmt  aller à l'état 34


État 31

    2 stmt: WHILE condition DO stmtlist . DONE
    5 stmtlist: stmtlist . stmt

    IDENTIFIER  décalage et aller à l'état 1
    IF          décalage et aller à l'état 2
    WHILE       décalage et aller à l'état 3
    DONE        décalage et aller à l'état 35

    stmt  aller à l'état 34


État 32

    4 stmt: IF condition THEN stmtlist ELSE . stmtlist ENDIF

    IDENTIFIER  décalage et aller à l'état 1
    IF          décalage et aller à l'état 2
    WHILE       décalage et aller à l'état 3

    stmt      aller à l'état 29
    stmtlist  aller à l'état 36


État 33

    3 stmt: IF condition THEN stmtlist ENDIF .

    $défaut  réduction par utilisation de la règle 3 (stmt)


État 34

    5 stmtlist: stmtlist stmt .

    $défaut  réduction par utilisation de la règle 5 (stmtlist)


État 35

    2 stmt: WHILE condition DO stmtlist DONE .

    $défaut  réduction par utilisation de la règle 2 (stmt)


État 36

    4 stmt: IF condition THEN stmtlist ELSE stmtlist . ENDIF
    5 stmtlist: stmtlist . stmt

    IDENTIFIER  décalage et aller à l'état 1
    IF          décalage et aller à l'état 2
    ENDIF       décalage et aller à l'état 37
    WHILE       décalage et aller à l'état 3

    stmt  aller à l'état 34


État 37

    4 stmt: IF condition THEN stmtlist ELSE stmtlist ENDIF .

    $défaut  réduction par utilisation de la règle 4 (stmt)
